[
	{
		"building_block_id": "513",
		"building_block_category_id": "76",
		"name": "Framework",
		"about": "<p>There is no reason to hand-craft an API from scratch these days.&nbsp; There are numerous frameworks out their that are designed for rapidly deploying web APIs.&nbsp;</p>n<p>Deploying APIs using a framework is only an option when you have the necessary technical and developer talent to be able to understand the setup of environment and follow the design patterns of each framework.</p>n<p>When it comes to planning the deployment of an API using a framework, it is best to select one of the common frameworks written in the preferred language of the available developer and IT resources.</p>n<p>&nbsp;Frameworks can be used to deploy data APIs from CSVs and databases, content from documents or custom code resources that allow access to more complex objects.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-ladder.png",
		"image_width": "75",
		"sort_order": "0"
	},
	{
		"building_block_id": "515",
		"building_block_category_id": "76",
		"name": "API Proxy",
		"about": "<p>API proxy are common place for taking an existing API interface, running it through an intermediary which allows for translations, transformations and other added services on top of API.</p>n<p>An API proxy does not deploy an API, but can take existing resources like SOAP, XML-RPC and transform into more common RESTful APIs with JSON formats.</p>n<p>Proxies provide other functions such as service composition, rate limiting, filtering and securing of API endpoints. API gateways are the preffered approach for the enterprise, and the companies that provide services support larger API deployments.&nbsp;</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-proxy.png",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "516",
		"building_block_category_id": "76",
		"name": "API Connector",
		"about": "<p>Contrary to an API proxy, there are API solutions that are proxyless, while just allowing an API to connect or plugin to the advanced API resources.</p>n<p>While proxies work in many situations, allowing APIs to be mediated and transformed into required interfaces, API connectors may be preferred in situations where data should not be routed through proxy machines.</p>n<p>API connector solutions only connect to existing API implementations are easily integrated with existing API frameworks as well as web servers like Nginx.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-connector",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "517",
		"building_block_category_id": "76",
		"name": "Hosting",
		"about": "<p>Hosting is all about where you are going to park your API. Usual deployments are on-premise within your company or data center, in a public cloud like Amazon Web Services or a hybrid of the two.</p>n<p>Most of the existing service providers in the space support all types of hosting, but some companies, who have the required technical talent host their own API platforms.</p>n<p>With HTTP being the transport in which modern web APIs put to use, sharing the same infrastructure as web sites, hosting APIs does not take any additional skills or resources, if you already have a web site or application hosting environment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-hosting",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "518",
		"building_block_category_id": "76",
		"name": "API Versioning",
		"about": "<p>There are many different approaches to managing different version of web APIs.&nbsp; When embarking on API deployment you will have to make a decision about how each endpoint will be versioned and maintained.</p>n<p>Each API service provider offers versioning solutions, but generally it is handled within the API URI or passed as an HTTP header.&nbsp;</p>n<p>Versioning is an inevitable part of the API life-cycle and is better to be integrated by design as opposed to waiting until you are forced to make a evolution in your API interface.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-alarm-clock.png",
		"image_width": "90",
		"sort_order": "0"
	},
	{
		"building_block_id": "519",
		"building_block_category_id": "76",
		"name": "Documentation",
		"about": "<p>API documentation is an essential building block for all API endpoints.&nbsp; Quality, up to date documentation is essential for on-boarding developers and ensuring they successfully integrate with an API.</p>n<p>Document needs to be derived from quality API designs, kept up to date and made accessible to developers via a portal.&nbsp;</p>n<p>There are several tools available for automatically generting documentation and even what is called interactive documentation, that allows for developers to make live calls against an API while exploring the documentation.</p>n<p>API documentation is part of every API deployment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-documents.png",
		"image_width": "90",
		"sort_order": "0"
	},
	{
		"building_block_id": "520",
		"building_block_category_id": "76",
		"name": "Code Samples",
		"about": "<p>Second to documentation, code samples in a variety of programming languages is essential to a successful API integration.&nbsp; With quality API design, generating samples that can be used across multiple API resources is possible.</p>n<p>Many of the emerging API service providers and the same tools that generate API documentation from JSON definitions can also auto generate code samples that can be used by developers.</p>n<p>Generation of code samples in a variety of programming languages is a requirement during API deployment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-code.png",
		"image_width": "115",
		"sort_order": "0"
	},
	{
		"building_block_id": "513",
		"building_block_category_id": "76",
		"name": "Framework",
		"about": "<p>There is no reason to hand-craft an API from scratch these days.&nbsp; There are numerous frameworks out their that are designed for rapidly deploying web APIs.&nbsp;</p>n<p>Deploying APIs using a framework is only an option when you have the necessary technical and developer talent to be able to understand the setup of environment and follow the design patterns of each framework.</p>n<p>When it comes to planning the deployment of an API using a framework, it is best to select one of the common frameworks written in the preferred language of the available developer and IT resources.</p>n<p>&nbsp;Frameworks can be used to deploy data APIs from CSVs and databases, content from documents or custom code resources that allow access to more complex objects.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-ladder.png",
		"image_width": "75",
		"sort_order": "0"
	},
	{
		"building_block_id": "515",
		"building_block_category_id": "76",
		"name": "API Proxy",
		"about": "<p>API proxy are common place for taking an existing API interface, running it through an intermediary which allows for translations, transformations and other added services on top of API.</p>n<p>An API proxy does not deploy an API, but can take existing resources like SOAP, XML-RPC and transform into more common RESTful APIs with JSON formats.</p>n<p>Proxies provide other functions such as service composition, rate limiting, filtering and securing of API endpoints. API gateways are the preffered approach for the enterprise, and the companies that provide services support larger API deployments.&nbsp;</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-proxy.png",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "516",
		"building_block_category_id": "76",
		"name": "API Connector",
		"about": "<p>Contrary to an API proxy, there are API solutions that are proxyless, while just allowing an API to connect or plugin to the advanced API resources.</p>n<p>While proxies work in many situations, allowing APIs to be mediated and transformed into required interfaces, API connectors may be preferred in situations where data should not be routed through proxy machines.</p>n<p>API connector solutions only connect to existing API implementations are easily integrated with existing API frameworks as well as web servers like Nginx.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-connector",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "517",
		"building_block_category_id": "76",
		"name": "Hosting",
		"about": "<p>Hosting is all about where you are going to park your API. Usual deployments are on-premise within your company or data center, in a public cloud like Amazon Web Services or a hybrid of the two.</p>n<p>Most of the existing service providers in the space support all types of hosting, but some companies, who have the required technical talent host their own API platforms.</p>n<p>With HTTP being the transport in which modern web APIs put to use, sharing the same infrastructure as web sites, hosting APIs does not take any additional skills or resources, if you already have a web site or application hosting environment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-hosting",
		"image_width": "125",
		"sort_order": "0"
	},
	{
		"building_block_id": "518",
		"building_block_category_id": "76",
		"name": "API Versioning",
		"about": "<p>There are many different approaches to managing different version of web APIs.&nbsp; When embarking on API deployment you will have to make a decision about how each endpoint will be versioned and maintained.</p>n<p>Each API service provider offers versioning solutions, but generally it is handled within the API URI or passed as an HTTP header.&nbsp;</p>n<p>Versioning is an inevitable part of the API life-cycle and is better to be integrated by design as opposed to waiting until you are forced to make a evolution in your API interface.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-alarm-clock.png",
		"image_width": "90",
		"sort_order": "0"
	},
	{
		"building_block_id": "519",
		"building_block_category_id": "76",
		"name": "Documentation",
		"about": "<p>API documentation is an essential building block for all API endpoints.&nbsp; Quality, up to date documentation is essential for on-boarding developers and ensuring they successfully integrate with an API.</p>n<p>Document needs to be derived from quality API designs, kept up to date and made accessible to developers via a portal.&nbsp;</p>n<p>There are several tools available for automatically generting documentation and even what is called interactive documentation, that allows for developers to make live calls against an API while exploring the documentation.</p>n<p>API documentation is part of every API deployment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-documents.png",
		"image_width": "90",
		"sort_order": "0"
	},
	{
		"building_block_id": "520",
		"building_block_category_id": "76",
		"name": "Code Samples",
		"about": "<p>Second to documentation, code samples in a variety of programming languages is essential to a successful API integration.&nbsp; With quality API design, generating samples that can be used across multiple API resources is possible.</p>n<p>Many of the emerging API service providers and the same tools that generate API documentation from JSON definitions can also auto generate code samples that can be used by developers.</p>n<p>Generation of code samples in a variety of programming languages is a requirement during API deployment.</p>",
		"category_id": "76",
		"category": "Deployment",
		"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/building-blocks/bw-code.png",
		"image_width": "115",
		"sort_order": "0"
	}
]